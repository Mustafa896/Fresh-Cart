{"ast":null,"code":"var _jsxFileName = \"D:\\\\ecommerce6-main\\\\ecommerce6-main\\\\src\\\\Components\\\\Forgot\\\\ForgetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForgetPassword() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n  let mySchema = Yup.object({\n    email: Yup.string().email(\"email is not valid\").required(\"Email is required\"),\n    newPassword: Yup.string().required(\"Password is required\").matches(/^[A-Za-z0-9]{3,8}$/, \"Password muct start capital letter\")\n  });\n  let formik = useFormik({\n    initialValues: {\n      email: \"\",\n      newPassword: \"\"\n    },\n    validationSchema: mySchema,\n    onSubmit: values => {\n      formPassword(values);\n    }\n  });\n  async function formPassword(values) {\n    setIsLoading(true);\n    return axios.put('https://ecommerce.routemisr.com/api/v1/auth/resetPassword', values).then(data => {\n      if (data.statusText == \"OK\") {\n        toast.success(\"success\");\n        navigate(\"/login\");\n        setIsLoading(false);\n      }\n    }).catch(err => {\n      toast.error(\"error\");\n      setIsLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex justify-content-center mt-5 pt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 pt-5\",\n        children: /*#__PURE__*/_jsxDEV(RotatingLines, {\n          visible: true,\n          height: \"96\",\n          width: \"96\",\n          color: \"grey\",\n          strokeWidth: \"5\",\n          animationDuration: \"0.75\",\n          ariaLabel: \"rotating-lines-loading\",\n          wrapperStyle: {},\n          wrapperClass: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-75 pt-5 mt-5 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reset New Password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: \"form-control mb-2\",\n            onChange: formik.handleChange,\n            value: formik.values.email,\n            onBlur: formik.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"newPassword : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            id: \"password\",\n            className: \"form-control mb-2\",\n            onChange: formik.handleChange,\n            value: formik.values.newPassword,\n            onBlur: formik.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !(formik.isValid && formik.dirty),\n              type: \"submit\",\n              className: \"btn bg-main text-white\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ForgetPassword, \"XOKNs6OJJGmKQI/Db5zDiAXqfGM=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","useContext","useState","axios","Yup","useNavigate","toast","Toaster","useFormik","RotatingLines","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgetPassword","_s","isLoading","setIsLoading","navigate","mySchema","object","email","string","required","newPassword","matches","formik","initialValues","validationSchema","onSubmit","values","formPassword","put","then","data","statusText","success","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","handleSubmit","htmlFor","type","name","id","onChange","handleChange","value","onBlur","handleBlur","disabled","isValid","dirty","_c","$RefreshReg$"],"sources":["D:/ecommerce6-main/ecommerce6-main/src/Components/Forgot/ForgetPassword.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport { RotatingLines } from 'react-loader-spinner';\r\n\r\n\r\nexport default function ForgetPassword() {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    let navigate = useNavigate()\r\n\r\n    let mySchema = Yup.object(\r\n        {\r\n            email: Yup.string().email(\"email is not valid\").required(\"Email is required\"),\r\n            newPassword: Yup.string().required(\"Password is required\").matches(/^[A-Za-z0-9]{3,8}$/, \"Password muct start capital letter\"),\r\n        }\r\n    )\r\n    let formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            newPassword: \"\",\r\n        }, validationSchema: mySchema\r\n        , onSubmit: (values) => {\r\n            formPassword(values)\r\n        }\r\n    })\r\n\r\n\r\n    async function formPassword(values) {\r\n        setIsLoading(true)\r\n        return axios.put('https://ecommerce.routemisr.com/api/v1/auth/resetPassword', values\r\n        ).then((data) => {\r\n            if (data.statusText == \"OK\") {\r\n                toast.success(\"success\")\r\n                navigate(\"/login\")\r\n                setIsLoading(false)\r\n            }\r\n        }).catch((err) => {\r\n            toast.error(\"error\")\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><Toaster /></div>\r\n            {isLoading ?\r\n                <div className=\" d-flex justify-content-center mt-5 pt-5\">\r\n                    <div className=\"mt-5 pt-5\">\r\n                        <RotatingLines\r\n                            visible={true}\r\n                            height=\"96\"\r\n                            width=\"96\"\r\n                            color=\"grey\"\r\n                            strokeWidth=\"5\"\r\n                            animationDuration=\"0.75\"\r\n                            ariaLabel=\"rotating-lines-loading\"\r\n                            wrapperStyle={{}}\r\n                            wrapperClass=\"\"\r\n                        />\r\n                    </div>\r\n                </div> : \"\"}\r\n            <div className=\"container\">\r\n\r\n                <div className=\"w-75 pt-5 mt-5 mx-auto\">\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <h2>Reset New Password :</h2>\r\n\r\n                        <label htmlFor=\"email\">Email : </label>\r\n                        <input type=\"email\" name='email' id='email' className='form-control mb-2'\r\n                            onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur} />\r\n\r\n                        <label htmlFor=\"newPassword\">newPassword : </label>\r\n                        <input type=\"password\" name='newPassword' id='password' className='form-control mb-2'\r\n                            onChange={formik.handleChange} value={formik.values.newPassword} onBlur={formik.handleBlur} />\r\n\r\n                        <div className=\"\">\r\n                            <button  disabled={!(formik.isValid && formik.dirty)} type='submit' className='btn bg-main text-white'>Reset Password</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}